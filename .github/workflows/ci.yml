name: CI

on: [ push, pull_request ]

env:
  # Enable format attributes in ncurses headers
  # Enable fortified memory/string handling
  CPPFLAGS: -DGCC_PRINTF -DGCC_SCANF -D_FORTIFY_SOURCE=2

jobs:
  build-ubuntu-minimal-gcc-lto-O2:
    runs-on: ubuntu-latest
    env:
      CFLAGS: -O2 -g -flto
      LDFLAGS: -O2 -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends libncursesw5-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-affinity --disable-unicode --disable-sensors || (cat config.log; exit 1)
    - name: Enable compatibility modes
      run: |
        sed -i 's/#define HAVE_FSTATAT 1/#undef HAVE_FSTATAT/g' config.h
        sed -i 's/#define HAVE_OPENAT 1/#undef HAVE_OPENAT/g' config.h
        sed -i 's/#define HAVE_READLINKAT 1/#undef HAVE_READLINKAT/g' config.h
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS="--enable-werror --enable-affinity --disable-unicode --disable-sensors"
    - name: Get program size
      run: size ./htop

  build-ubuntu-minimal-gcc-lto-Os:
    runs-on: ubuntu-latest
    env:
      CFLAGS: -Os -g -flto
      LDFLAGS: -Os -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends libncursesw5-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-affinity --disable-unicode --disable-sensors || (cat config.log; exit 1)
    - name: Enable compatibility modes
      run: |
        sed -i 's/#define HAVE_FSTATAT 1/#undef HAVE_FSTATAT/g' config.h
        sed -i 's/#define HAVE_OPENAT 1/#undef HAVE_OPENAT/g' config.h
        sed -i 's/#define HAVE_READLINKAT 1/#undef HAVE_READLINKAT/g' config.h
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS="--enable-werror --enable-affinity --disable-unicode --disable-sensors"
    - name: Get program size
      run: size ./htop

  build-ubuntu-minimal-clang-lto-O2:
    runs-on: ubuntu-latest
    env:
      CC: clang-18
      CFLAGS: -O2 -g -flto
      LDFLAGS: -O2 -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main' -y
        sudo apt-get update -q
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends clang-18 libncursesw5-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-affinity --disable-unicode --disable-sensors || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS="--enable-werror --enable-affinity --disable-unicode --disable-sensors"
    - name: Get program size
      run: size ./htop

  build-ubuntu-minimal-clang-lto-Os:
    runs-on: ubuntu-latest
    env:
      CC: clang-18
      CFLAGS: -Os -g -flto
      LDFLAGS: -Os -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main' -y
        sudo apt-get update -q
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends clang-18 libncursesw5-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-affinity --disable-unicode --disable-sensors || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS="--enable-werror --enable-affinity --disable-unicode --disable-sensors"
    - name: Get program size
      run: size ./htop

  build-ubuntu-full-featured-gcc-O2:
    runs-on: ubuntu-latest
    # Enable LTO, might trigger additional warnings on advanced inlining
    env:
      CFLAGS: -O2 -g -flto
      LDFLAGS: -O2 -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends libncursesw5-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libsensors4-dev libcap-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities'
    - name: Get program size
      run: size ./htop

  build-ubuntu-full-featured-gcc-Os:
    runs-on: ubuntu-latest
    # Enable LTO, might trigger additional warnings on advanced inlining
    env:
      CFLAGS: -Os -g -flto
      LDFLAGS: -Os -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends libncursesw5-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libsensors4-dev libcap-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities'
    - name: Get program size
      run: size ./htop

  build-ubuntu-full-featured-clang-lto-O2:
    runs-on: ubuntu-latest
    env:
      CC: clang-18
      CFLAGS: -O2 -g -flto
      LDFLAGS: -O2 -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main' -y
        sudo apt-get update -q
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends clang-18 libncursesw5-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libsensors4-dev libcap-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities'
    - name: Get program size
      run: size ./htop

  build-ubuntu-full-featured-clang-lto-Os:
    runs-on: ubuntu-latest
    env:
      CC: clang-18
      CFLAGS: -Os -g -flto
      LDFLAGS: -Os -g -flto -Wl,--as-needed
    steps:
    - uses: actions/checkout@v4
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main' -y
        sudo apt-get update -q
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends clang-18 libncursesw5-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libsensors4-dev libcap-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-delayacct --enable-sensors --enable-capabilities'
    - name: Get program size
      run: size ./htop

  build-ubuntu-gcc-static-O2:
    runs-on: ubuntu-latest
    # Enable LTO, might trigger additional warnings on advanced inlining
    env:
      CFLAGS: -O2 -g -flto
      LDFLAGS: -O2 -g -flto
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends libncursesw5-dev libtinfo-dev libgpm-dev libsensors4-dev libcap-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-static --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --disable-hwloc --disable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-static --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --disable-hwloc --disable-delayacct --enable-sensors --enable-capabilities'
    - name: Get program size
      run: size ./htop

  build-ubuntu-gcc-static-Os:
    runs-on: ubuntu-latest
    # Enable LTO, might trigger additional warnings on advanced inlining
    env:
      CFLAGS: -Os -g -flto
      LDFLAGS: -Os -g -flto
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: sudo apt-get install --no-install-recommends libncursesw5-dev libtinfo-dev libgpm-dev libsensors4-dev libcap-dev
    - name: Bootstrap
      run: ./autogen.sh
    - name: Configure
      run: ./configure --enable-static --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --disable-hwloc --disable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )
    - name: Build
      run: make -k
    - name: Distcheck
      run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-static --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --disable-hwloc --disable-delayacct --enable-sensors --enable-capabilities'
    - name: Get program size
      run: size ./htop

